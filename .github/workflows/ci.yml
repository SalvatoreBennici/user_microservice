name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]


env:
  NODE_DEFAULT_VERSION: "20.11.1"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node_version.outputs.version }}
      repository-lowercase: ${{ steps.repo_name.outputs.lowercase }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Extract Node.js version
        id: node_version
        run: |
          NODE_VER=$(grep -Po 'version\.set\("\K[0-9]+\.[0-9]+\.[0-9]+' build.gradle.kts || echo "$NODE_DEFAULT_VERSION")
          echo "version=$NODE_VER" >> $GITHUB_OUTPUT

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "lowercase=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

  quality-checks:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        task: [ lint, test ]
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Linting
        if: matrix.task == 'lint'
        run: |
          npx xo > lint-report.txt 2>&1 || echo "Linting completed with issues"
          if [ ! -s lint-report.txt ]; then
            echo "No linting issues found." > lint-report.txt
          fi

      - name: Run Tests
        if: matrix.task == 'test'
        run: |
          npm run test > test-report.txt 2>&1
          TEST_EXIT_CODE=$?
          if [ ! -s test-report.txt ]; then
            echo "All tests passed successfully." > test-report.txt
          fi
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "Tests failed with exit code $TEST_EXIT_CODE"
            exit $TEST_EXIT_CODE
          fi

      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.task }}-report
          path: ${{ matrix.task }}-report.txt
          retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: [setup, quality-checks]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ needs.setup.outputs.repository-lowercase }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Verify Docker Image
        run: docker pull ghcr.io/${{ needs.setup.outputs.repository-lowercase }}:latest
