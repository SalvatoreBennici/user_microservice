name: Lint and Test on Push

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get Node.js version from Gradle build file
        id: node_version
        run: |
          NODE_VER=$(grep -Po 'version\.set\("\K[0-9]+\.[0-9]+\.[0-9]+' build.gradle.kts)
          echo "node_version=$NODE_VER" >> $GITHUB_OUTPUT
          echo "Node version: $NODE_VER"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node_version.outputs.node_version }}
          cache: 'npm'  # Built-in npm caching
          cache-dependency-path: package-lock.json

      - name: Install Root Dependencies
        run: npm ci
        working-directory: .

      - name: Execute Lint
        id: lint
        run: npx xo > lint-report.txt || true

      - name: Check if lint report is empty
        id: check_empty_lint
        run: |
          if [ ! -s lint-report.txt ]; then
            echo "No linting issues found." > lint-report.txt
          fi

      - name: Upload ESLint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.txt

      - name: Execute Tests
        id: test
        run: npm run test > test-report.txt

      - name: Check if Test report is empty
        id: check_empty_test
        run: |
          if [ ! -s test-report.txt ]; then
            echo "No test issues found." > test-report.txt
          fi

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.txt

      - name: Fail if tests failed
        if: failure()
        run: exit 1